Description: Template que cria um banco RedShift

Resources:

  RedshiftClusterCanuto:
    Type: AWS::Redshift::Cluster
    Properties:
      AllowVersionUpgrade: true
      AutomatedSnapshotRetentionPeriod: 5
      AvailabilityZone: sa-east-1a
      ClusterIdentifier: clusterdocanuto
      ClusterParameterGroupName: !Ref ClusterParameterGroup
      ClusterSubnetGroupName: !Ref ClusterSubnetGroup
      ClusterType: multi-node
      DBName: canutoproduction
      Encrypted: truet
      IamRoles:
        - !GetAtt RedshiftRole.Arn                   #ENTENDER MELHOR
      MasterUsername: admin
      MasterUserPassword: Admin1234
      NodeType: dc2.large # https://docs.aws.amazon.com/redshift/latest/mgmt/working-with-clusters.html
      NumberOfNodes: 2
      VpcSecurityGroupIds:
        - !Ref RedshiftSecurityGroup

  ClusterParameterGroup:
    Type: AWS::Redshift::ClusterParameterGroup
    Properties:
      Description: Parameter group para nosso cluster redshift
      ParameterGroupFamily: redshift-1.0                          # Revisar do que se trata posteriormente
      Parameters:
        - ParameterName: max_concurrency_scaling_clusters         # Revisar do que se trata posteriormente
          ParameterValue: 0                                       # Revisar do que se trata posteriormente

  ClusterSubnetGroup:
    Type: AWS::Redshift::ClusterSubnetGroup
    Properties:
      Description: Subnet group para nosso cluster redshift
      SubnetIds:
        - !Ref RedshiftSubnet

  RedshiftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16

  RedshiftSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: sa-east-1a
      CidrBlock: 10.0.0.0/24
      VpcId: !Ref RedshiftVPC

  RedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Redshift. Public access
      GroupName: redshift-security-group
      SecurityGroupEgress:
        - CidrIp: 0.0.0.0/0
          FromPort: 5439
          IpProtocol: tcp
          ToPort: 5439
      SecurityGroupIngress:
        - CidrIp: 0.0.0.0/0
          FromPort: 5439
          IpProtocol: tcp
          ToPort: 5439
      VpcId: !Ref RedshiftVPC

  RedshiftRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - redshift.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: "/"
      RoleName: iam-redshift-role

  RedshiftSpectrumPolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Effect: Allow
            Action:
              - s3:Get*
              - s3:List*
            Resource:
              - arn:aws:s3:::*
          - Effect: Allow
            Action:
              - glue:CreateDatabase
              - glue:DeleteDatabase
              - glue:GetDatabase
              - glue:GetDatabases
              - glue:UpdateDatabase
              - glue:CreateTable
              - glue:DeleteTable
              - glue:BatchDeleteTable
              - glue:UpdateTable
              - glue:GetTable
              - glue:GetTables
              - glue:BatchCreatePartition
              - glue:CreatePartition
              - glue:DeletePartition
              - glue:BatchDeletePartition
              - glue:UpdatePartition
              - glue:GetPartition
              - glue:GetPartitions
              - glue:BatchGetPartition
            Resource:
              - "*"
          - Effect: Allow
            Action:
              - athena:*
            Resource:
              - "*"
      PolicyName: redshiftSpectrum
      Roles:
        - !Ref RedshiftRole

  RedshiftVPCInternetGateway:
    Type: AWS::EC2::InternetGateway

  RedshiftVPCAttachGateway:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref RedshiftVPC
      InternetGatewayId: !Ref RedshiftVPCInternetGateway

  RedshiftRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RedshiftVPC

  RedshiftVPCRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref RedshiftVPCInternetGateway
      RouteTableId: !Ref RedshiftRouteTable

  RedshiftSubnetRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RedshiftRouteTable
      SubnetId: !Ref RedshiftSubnet
